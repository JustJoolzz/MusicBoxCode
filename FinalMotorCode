#include <AccelStepper.h>

// ENABLE pin, inverted
#define NOT_ENABLE_PIN 8

// The X Stepper pins
#define STEPPER_X_DIR_PIN 5
#define STEPPER_X_STEP_PIN 2

// The Y stepper pins
#define STEPPER_Y_DIR_PIN 6
#define STEPPER_Y_STEP_PIN 3

//Master Arduino pin this is the pin that is used to recieve commands from master board
#define MASTERPIN A4 

// Define some steppers and the pins the will use
AccelStepper stepperX(AccelStepper::DRIVER, STEPPER_X_STEP_PIN, STEPPER_X_DIR_PIN);
AccelStepper stepperY(AccelStepper::DRIVER, STEPPER_Y_STEP_PIN, STEPPER_Y_DIR_PIN);

#define REQUIRED_STEPS 9600 // number of steps needed to play the song. Will have to be set after testing

void setup()
{
  // Enable drivers
  pinMode(NOT_ENABLE_PIN, OUTPUT);
  digitalWrite(NOT_ENABLE_PIN, LOW);


  pinMode(MASTERPIN, INPUT); //tells the arduino that the master pin is an input pin
 
  stepperX.setMaxSpeed(600.0);
  stepperX.setAcceleration(200.0);
 // stepperX.moveTo(10000);
   
  /*
  stepperY.setMaxSpeed(800.0);
  stepperY.setAcceleration(400.0);
  stepperY.moveTo(500);
  */
}


void loop()
{
  stepperX.run(); // will make one step if there is one to be made. Otherwise, will do nothing.
 

 // this sets the number of steps after getting command from master board before the program runs continuously until it has reached it
  if (digitalRead(MASTERPIN) == HIGH) { //if pin is high...
    stepperX.move(REQUIRED_STEPS); //set required steps to target
    while(digitalRead(MASTERPIN) == HIGH) { // wait for the pin to be set to low again by master board before beginning
      delay(5);
    }
  }


/*
    // Change direction at the limits
    if (stepperX.distanceToGo() == 0)
        stepperX.moveTo(-stepperX.currentPosition());
    if (stepperY.distanceToGo() == 0)
        stepperY.moveTo(-stepperY.currentPosition());
       
    stepperX.run();
    stepperY.run();




*/
}


